# Note you may need to add the following to your printer.cfg somewhere (without the comments of course) for the Kinematic position stuff below to work.
#[force_move]
#enable_force_move: True

[gcode_macro _CG28]
description: Homing only if necessary
gcode:
    {% if "xyz" not in printer.toolhead.homed_axes %}
        G28
    {% endif %}

[homing_override]
axes: xyz
set_position_z: 0
gcode:

  {% set Z_HOP = 10 %}                 # The Z-hop distance after homing Z
  {% set Z_HOP_SPEED = 20 %}          # The speed of Z-hop after homing Z
  {% set SAFETY_HOP = 10 %}           # The "unsafe" z-hop before homing XY
  {% set SAFETY_HOP_SPEED = 10 %} 

  # Read the current acceleration max
  {% set cur_accel = printer.toolhead.max_accel %}
  {% set cur_accel_to_decel = printer.toolhead.max_accel_to_decel %}
  
  {% set home_all = 'X' not in params and 'Y' not in params and 'Z' not in params %}
  #status_homing

  #SET_KINEMATIC_POSITION Z=1
  #G1 Z4 F1200

  # Pre-homing "unsafe" z-hop to protect bed
  {% if not "xyz" in printer.toolhead.homed_axes %}
      G1 Z{SAFETY_HOP} F{(SAFETY_HOP_SPEED * 60)}
  {% endif %}

  {% if home_all or 'X' in params %}
    _HOME_X
  {% endif %}
  
  {% if home_all or 'Y' in params %}
    _HOME_Y
  {% endif %}
  
  {% if home_all or 'Z' in params %}
    G90
    G1 X150 Y150 F5000

    G28 Z
    G1 Z{Z_HOP} F{(Z_HOP_SPEED * 60)} # Post z-home z-hop
   #status_ready
  {% endif %}

[gcode_macro _HOME_X]
gcode:
    SAVE_GCODE_STATE NAME=HOMING
    # Always use consistent run_current on A/B steppers during sensorless homing
    {% set RUN_CURRENT_X = printer.configfile.settings['tmc2209 stepper_x'].run_current|float %}
    {% set RUN_CURRENT_Y = printer.configfile.settings['tmc2209 stepper_y'].run_current|float %}
    {% set HOME_CURRENT = 0.7 %}
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOME_CURRENT}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOME_CURRENT}

    # Home
    #status_homing
    G28 X
    # Move away
    G91
    G1 X-10 F1200
    
    # Wait just a second… (give StallGuard registers time to clear)
    G4 P1000
    # Set current during print
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}
    RESTORE_GCODE_STATE NAME=HOMING

[gcode_macro _HOME_Y]
gcode:
    SAVE_GCODE_STATE NAME=HOMING
    # Set current for sensorless homing
    {% set RUN_CURRENT_X = printer.configfile.settings['tmc2209 stepper_x'].run_current|float %}
    {% set RUN_CURRENT_Y = printer.configfile.settings['tmc2209 stepper_y'].run_current|float %}
    {% set HOME_CURRENT = 0.7 %}
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOME_CURRENT}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOME_CURRENT}

    # Home
    #status_homing
    G28 Y
    # Move away
    G91
    G1 Y-10 F1200

    # Wait just a second… (give StallGuard registers time to clear)
    G4 P1000
    # Set current during print
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}
    RESTORE_GCODE_STATE NAME=HOMING

[gcode_macro Carto_QGL] # safer and faster QGL for Cartographer
gcode:
    _CG28 # conditional homing
    QUAD_GANTRY_LEVEL horizontal_move_z=10 retries=0 retry_tolerance=1.000
    QUAD_GANTRY_LEVEL horizontal_move_z=3
    G28 Z